"""
This is a prototype of a Novika REPL. You can run it from
the terminal or from a viewer such as one found in `world/`
or the upcoming Novika Sketchbook.

To start it up, run the following command from the Novika
repo directory:

  >>> ./bin/novika core repl.nk

The REPL could be somewhat buggy because it uses some of the
more obscure features of Novika, and interfaces with the guts
of the language more intimately than most other Novika code.
Considering the language is currently entirely untested (meaning
no automatic tests, of course), to reiterate, bugs are expected.
"""

"REPL root block, also persisted for the entire REPL session.
 A child of the block this comment is part of, and so inherits
 all imported packages/files (such as core) and essential."
this child $: pgRoot

[
  "Whether there was an error."
  false $: error

  "Global stack, persisted for the entire REPL session."
  [ ] $: pgStack


  [ "( Q -- ): runs a Quote of Novika source code in the context
     of the current REPL session."
    $: line

    this $: self

    0 $: timeTakenMs

    "Create an instance of the root block so that the line of code
     we will execute has access to all words the frontend provided."
    pgRoot new $: pgRootInstance

    "Create an instance of the stack block, for if an error happens,
     we'd like to restore back to the 'good' stack."
    pgStack shallowCopy $: pgStackCopy

    [
      "This block is required to isolate deaths inside the REPL line
       session from deaths inside the REPL code itself."

      [ "This death handler will catch all errors that are made in
         the REPL root block instance we've created above. This handler
         will report the error when it happens."
        reportError true =: error
        self resume
      ] @: *died

      [ pgStackCopy pgRootInstance line slurp hydrate! ] measure =: timeTakenMs
    ] do

    error br:
      [ "There was an error (or multiple errors). It was already
         reported by the death handler above."
        false =: error
      ]
      [ "There was no error. Merge tables of original and instance
         of the REPL root block, making entries defined in the
         instance visible to next REPL inputs. Also, substitute
         the global stack with the updated stack, which proved
         to have no errors."
        pgRoot pgRootInstance mergeTables
        pgStackCopy =: pgStack
        [ 'In ' timeTakenMs 'ms' ] ~~ echo
      ]

    pgStack echo
  ] @: runLine


  loop: [
    '>>> ' readLine br:
      [ "Line was read successfully:" runLine ]
      [ "The user had pressed Ctrl-D:" 'Bye.' echo break ]
  ]
] @: startSession


' ┌ Welcome to Novika!
 │
 ├─* You can type `help <word>` to see info about a word whose
 │   name you already know. Try `help help`.
 │
 ├─* To see what words are available, type `ls* each: [ echo ]`.
 │   To see help for those words alongside, you can hack up a
 │   tiny program: `ls* each: [ p here desc echo ]`.
 │
 ├─* To exit, hit Ctrl-D or Ctrl-C (force-quit).
 ┘
' echo

startSession
