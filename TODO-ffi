DONE
  [+] struct declaration with ffi:createLayout
  [+] struct reference
  [+] struct inline
  [+] untyped pointer
  [+] ffi:addressof
  [+] fix nondeterministic failure in 'primitive -> C int/float -> C args/inline struct -> inline struct -> primitive'
  [+] empty struct layout dies
  [+] catch inline struct recursion
  [+] unbox untyped pointer to struct& or struct~
  [+] type-as-word ffi:sizeof
  [+] box foreign value in a pointer
  [+] self-referential structs
  [+] self-referential toQuote
  [+] struct layout byref equality
    [+] flat equality
    [+] nested equality
    [+] recursive equality
  [+] get layout of structview
  [+] cast untyped pointer to primitive type/cstr
  [+] set field in inline/ref struct using entry:submit
  [+] testing
    [+] nothing as value is impossible?
    [+] none: working with pointers & nullptrs
      [+] write none to inline struct
      [+] write none to struct ref
      [+] read none from inline struct
      [+] read none from struct ref
    [+] set field in inline/ref struct using entry:submit
      [+] in C-built struct
      [+] in Nk-built struct
    [+] doubly circular linked list construction in Nk and traverse in c
    [+] doubly circular linked list toQuote
    [+] doubly circular linked list construct in c and traverse in Nk
    [+] linked list toQuote
    [+] linked list construction in Nk and traverse in c
    [+] linked list construct in c and traverse in Nk
    [+] mutually recursive structs
    [+] mutually recursive struct toQuote
    [+] deep self-referential structs
    [+] deep self-referential toQuote
    [+] nested reference structs
    [+] nested inline structs
    [+] nested struct toQuote
    [+] ffi:sizeof
    [+] decimal
    [+] flat inline/ref struct
    [+] output into struct
    [+] string
    [+] struct layout equality
      [+] flat equality
      [+] nested equality
      [+] recursive equality
    [+] output into hole
      [+] primitive
      [+] string
      [+] pointer hole -> open to get the pointer -> use dereferenceStruct& to cast pointer to struct type -> get field values
      [+] pointer hole -> open to get the pointer -> use dereferenceStruct~ to cast pointer to struct type -> get field values

TODO:

  [-] variadic functions
  [-] testing
    [-] safety of allocateStruct&, allocateStruct~, createHole
    [-] typechecking/typename parsing test
      [-] single &
      [-] single ~
      [-] fn: wrong argument type
      [-] fn: wrong argument count
      [-] wrong struct type
      [-] use of nothing in arguments
      [-] nothing hole dereference
    [-] test raise/.die()s hits and error messages
    [-] variadic functions 0 arg } sum example from crystal ffi test
    [-] variadic functions 1 arg }
    [-] variadic functions n arg }
  [-] PR
  [-] serialization
  [-] compile tests using nkas and run with nki
  [-] efficiency evaluation
    ! speed of allocateStruct/buildStruct is important
    ! speed of calls to C is important
    ! speed of type parse is important
    ! speed of foreign -> novika is important
    ! speed of novika -> foreign is important
    [?] optimize
  [-] refactor
  [-] documentation; check for memory leaks & unsafe situations
  [-] windows
  [-] write example: ncurses
  [-] write example: windows something (ncurses too?)
  [-] merge <<<<<<<<<<<< !!!!!!!! <<<<<<<<<<<<<<< I REALLY WANT TO BE HERE!!! 05:49PM 29 Dec 2022
