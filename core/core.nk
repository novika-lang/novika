"""This is the entry point of Novika core.

We need to quickly go from low-level and playground-ish to
high-level and serious. Novika core is all about that.
"""

"First, we take hold of the current block (the block associated
with this file), and call it `_root`. With an underscore,
because that's our root, not their root."

cont getContBlock dup #_root swap pushes


_root #there [
  "( S B -- S ): opens Block in Stack, leaves Stack. Ahead
   is transferred to block."
  <| dup |> ahead #hydrate inject
] opens


_root #@: [
  "( F @: N -- ): makes an opener entry called Name for Form."
  ahead swap ahead thru swap opens
] opens


[ "( F $: N -- ): makes a pusher entry called Name for Form."
  ahead swap ahead thru swap pushes
] @: $:


[ "( V =: N -- ): submits Value to an already defined entry
   under the specified Name."
  ahead swap ahead thru swap entry:submit
] @: =:


[ """( Q F -- ): dies with Quote message stitched with an
   enquoted Form.

  >>> 'expected foobar, got: ' 100 2die
  Sorry: expected foobar, got: 100.
  """
  toQuote stitch die
] @: 2die


[ "( needsFeature: Id -- ): ensures that the frontend has feature
   with the specified Id enabled."
  ahead thru toQuote $: featureId

  novika:features [ featureId = ] any? not =>
    [
      244 67 54 rgb withEchoFg
        '! This program requires the `' featureId stitch '` feature. Consult the frontend' stitch
        '  you are using for information on how to include it.'
        swap withColorEcho
             withColorEcho
      dropEchoFg

      'missing feature: ' featureId stitch die
    ]
] @: needsFeature:
