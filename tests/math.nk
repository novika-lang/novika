describe 'Basic math: +, -, *, /, rem' [
  itShould 'add two small decimals' [
    1 2 + 3 =
  ]

  itShould 'subtract two small decimals' [
    1 2 - -1 =
  ]

  itShould 'multiply two small decimals' [
    100 2 * 200 =
  ]

  itShould 'divide two small decimals' [
    100 2 / 50 =
  ]

  itDies 'when dividing by zero' [
    100 0 /
  ]

  itShould 'take remainder for two small decimals' [
    100 3 rem 1 =
  ]

  "
  itDies 'when dividing by zero for remainder' [
    100 0 rem
  ]
  "

  itShould 'support negative decimals' [
    -1 -2 + -3 =
  ]

  itDies 'when a non-decimal is added to decimal' [
    1 '2' +
  ]

  itShould 'support blocks which implement *asDecimal literally' [
    [ $: *asDecimal this ] @: wrap
    1 2 wrap + 3 =
  ]

  itShould 'support blocks which implement *asDecimal computationally' [
    [ $: value [ value dup * ] @: *asDecimal this ] @: squareWrap
    1 2 squareWrap + 5 =
  ]

  itDies 'when block does NOT implement *asDecimal' [
    1 [ ] +
  ]

  itDies 'when block does NOT return a decimal in *asDecimal' [
    [ enquote $: *asDecimal this ] @: wrap
    1 2 wrap +
  ]
]
