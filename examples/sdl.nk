"""
Run this with:

  $ novika sdl examples/sdl.nk
"""

[ sdl:quit die ] @: __died__

[ 0 < => [ sdl:error die ] ] @: sdl:ensure

sdl:init:everything sdl:init sdl:ensure

'Hello World' sdl:window:centered sdl:window:centered 680 480 0 sdl:createWindow $: window
window not => [ sdl:error die ]


window -1 sdl:renderer:accelerated sdl:createRenderer $: renderer
renderer not => [ sdl:error die ]

[ @: h @: w @: y @: x

  [
    x 1 + $: x
    y 1 + $: y
    w 2 - $: w
    h 2 - $: h
    this sdl:intRect ffi:buildStruct&
  ] @: background

  [
    this sdl:intRect ffi:buildStruct&
  ] @: outline

  [ $: renderer

    x mapFromRange: 0 680 toRange: 20 132 round $: c
    y mapFromRange: 0 480 toRange: 0 360 round $: h

    60 c h lch $: bgColor
    30 c h lch $: outColor

    renderer outColor getRGB 255 sdl:setRenderDrawColor sdl:ensure
    renderer outline sdl:fillRect

    renderer bgColor getRGB 255 sdl:setRenderDrawColor sdl:ensure
    renderer background sdl:fillRect
  ] @: draw

  this
] @: createWindow

0 $: mouseX
0 $: mouseY

[ mouseX ] [ mouseY ] 50 50 createWindow $: window

sdl:event ffi:allocateUnion $: e

while: [ e ffi:addressof sdl:waitEvent 0 > ] [
  e.type sdl:event:quit = => break
  e.type sdl:event:mouseMotion = => [
    e.motion.x =: mouseX
    e.motion.y =: mouseY
  ]

  renderer 255 255 255 255 sdl:setRenderDrawColor
  renderer sdl:renderClear sdl:ensure
  renderer window.draw
  renderer sdl:renderPresent
]

sdl:quit
